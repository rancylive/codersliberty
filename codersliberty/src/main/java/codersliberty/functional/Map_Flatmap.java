package codersliberty.functional;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class Map_Flatmap {
	public static void main(String[] args) {
		demoMap();
	}

	public static void demoFlatMap() {
		List evens = Arrays.asList(2, 4, 6);
		List odds = Arrays.asList(3, 5, 7);
		List primes = Arrays.asList(2, 3, 5, 7, 11);
		List numbers = (List) Stream.of(evens, odds, primes).map(list -> list.stream())
				.collect(Collectors.toList());
		System.out.println("Flattend list: " + numbers);
	}

	public static void demoMap() {
		List<String> loseWeight = new ArrayList();
		loseWeight.add("avocados");
		loseWeight.add("beans");
		loseWeight.add("salad");
		loseWeight.add("oats");
		loseWeight.add("broccoli");
		System.out.println("list of String : " + loseWeight);
		List listOfInts = loseWeight.stream().map(s -> s.length()).collect(Collectors.toList());
		System.out.println("list of ints generate by map(): " + listOfInts);
		// flatMap() example, let's first create a list of list
		List<List> listOfListOfNumber = new ArrayList<>();
		listOfListOfNumber.add(Arrays.asList(2.3, 4, 3));
		listOfListOfNumber.add(Arrays.asList(3, 9.5));
		listOfListOfNumber.add(Arrays.asList(4, 16));
		System.out.println("list of list : " + listOfListOfNumber); // let's use flatMap() toflatten this list into list
																	// of integers i.e. 2,4,3,9,4,16
		List listOfIntegers = (List) listOfListOfNumber.stream().flatMap(list -> list.stream())
				.collect(Collectors.toList());
		System.out.println("list of numbers generated byflatMap : " + listOfIntegers);

		List<String> temp = (List<String>) listOfIntegers.stream().flatMap(row->fun(row)).collect(Collectors.toList());
		System.out.println("temp: "+temp);
		
		List<String> tempMap = (List<String>) listOfIntegers.stream().map(row->fun(row)).collect(Collectors.toList());
		System.out.println("tempMap: "+tempMap);

	}
	
	public static Stream fun(Object str) {
		//System.out.println(str);
		return Arrays.asList(str.toString().split("\\.")).stream();
	}
	
	public static List fun1(Object row) {
		//System.out.println(str);
		return Arrays.asList(row.toString().split("\\."));
	}
}
